---
- name: Retrieving status of Confluence directory to see if it exists
  stat:
    path: "{{ home_dir }}"
  register: p

- name: Create backup of Confluence home if it exists and delete
  block:
    - name: Create backup directory
      file:
        path: "{{ data_dir }}/backups"
        state: directory
        owner: "{{ os_confluence_user }}"
        group: "{{ os_confluence_group }}"

    - name: Create backup
      archive:
        path: "{{ home_dir }}"
        dest: "{{ data_dir }}/backups/confluence_home_{{ ansible_date_time.iso8601 }}.tar.gz"

    - name: Delete Confluence directory if it exists
      file:
        path: "{{ home_dir }}"
        state: absent
  when: p.stat.isdir is defined and p.stat.isdir

- name: Transfer backup file to application-data directory
  copy:
    src: "{{ file_path }}/{{ file_name }}"
    dest: "{{ data_dir }}/application-data/{{ file_name }}"

- name: Unarchive install file
  unarchive:
    src: "{{ data_dir }}/application-data/{{ file_name }}"
    dest: "{{ data_dir }}/application-data/"
    remote_src: true
    owner: "{{ os_confluence_user }}"
    group: "{{ os_confluence_group }}"

- name: Cleanup
  file:
    path: "{{ data_dir }}/application-data/{{ file_name }}"
    state: absent
